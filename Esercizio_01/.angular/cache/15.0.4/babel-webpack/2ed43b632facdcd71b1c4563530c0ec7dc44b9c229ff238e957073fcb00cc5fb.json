{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ElementRef } from '@angular/core';\nimport { RestServiceService } from '../services/rest-service.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rest-service.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"modale\"];\nexport let ModaleComponent = /*#__PURE__*/(() => {\n  class ModaleComponent {\n    constructor(serviceRest, modalService, route, elRef) {\n      this.serviceRest = serviceRest;\n      this.modalService = modalService;\n      this.route = route;\n      this.elRef = elRef;\n      this.id = this.serviceRest.areaCondivisa.id;\n    }\n    ngOnInit() {\n      this.serviceRest.getDatiById(this.id).subscribe(data => {\n        this.p = data;\n        console.log(this.p);\n      });\n    }\n    onExit(modal) {\n      return __awaiter(this, void 0, void 0, function* () {\n        modal.dismiss('Cross click');\n        this.modalService.dismissAll();\n        yield this.route.navigate(['Update']);\n      });\n    }\n    onFileSelected($event) {\n      const target = event.target;\n      if (target.files && target.files.length > 0) {\n        this.avatar = target.files[0].name;\n        this.avatar = './assets/image/' + this.avatar; //ricavo il nome dell' immagine e concateno la cartella asset per definire il path completo\n      }\n    }\n\n    onInsert(modal) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.route.navigate(['Home']);\n      });\n    }\n    ngAfterViewInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield new Promise(f => setTimeout(f, 1000));\n        this.nome = this.p.Nome;\n        this.cognome = this.p.Cognome;\n        this.mail = this.p.Email;\n        this.sesso = this.p.Sesso;\n        this.avatar = this.p.Avatar;\n        this.mestiere = this.p.Mestiere;\n      });\n    }\n  }\n  ModaleComponent.ɵfac = function ModaleComponent_Factory(t) {\n    return new (t || ModaleComponent)(i0.ɵɵdirectiveInject(i1.RestServiceService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  ModaleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModaleComponent,\n    selectors: [[\"app-modale\"]],\n    viewQuery: function ModaleComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modaleRef = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function ModaleComponent_Template(rf, ctx) {}\n  });\n  return ModaleComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}