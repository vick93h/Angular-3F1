{"ast":null,"code":"var https = require(\"https\");\nvar http = require(\"http\");\nvar extend = require(\"./extend\");\nvar HttpsProxyAgent = require(\"https-proxy-agent\");\nvar userAgent = getUA();\nfunction getUA() {\n  var os = require(\"os\");\n  var version = require(\"../package.json\").version;\n  return os.platform() + \"/\" + os.release() + \" \" + \"node/\" + process.versions.node + \" \" + \"node-browserstack/\" + version;\n}\nvar BaseClient = function (settings) {\n  if (!settings.username) {\n    throw new Error(\"Username is required.\");\n  }\n  if (!settings.password) {\n    throw new Error(\"Password is required.\");\n  }\n  extend(this, settings);\n  this.authHeader = \"Basic \" + Buffer.from(this.username + \":\" + this.password).toString(\"base64\");\n};\nBaseClient.prototype.request = function (options, data, fn) {\n  if (typeof data === \"function\") {\n    fn = data;\n    data = null;\n  }\n  fn = fn || function () {};\n  var reqOptions = extend({\n    host: this.server.host,\n    port: this.server.port,\n    method: \"GET\",\n    headers: {\n      authorization: this.authHeader,\n      \"content-type\": \"application/json\",\n      \"user-agent\": userAgent,\n      \"content-length\": typeof data === \"string\" ? data.length : 0\n    },\n    agent: this.proxy ? new HttpsProxyAgent(this.proxy) : null\n  }, options);\n  var req = (this.useHttp ? http : https).request(reqOptions, function (res) {\n    var response = \"\";\n    res.setEncoding(\"utf8\");\n    res.on(\"data\", function (chunk) {\n      response += chunk;\n    });\n    res.on(\"end\", function () {\n      if (res.statusCode !== 200) {\n        var message;\n        if (res.headers[\"content-type\"].indexOf(\"json\") !== -1) {\n          response = JSON.parse(response);\n          message = response.message;\n          if (response.errors) {\n            if (Array.isArray(response.errors) && response.errors.length) {\n              message += \" - \" + response.errors.map(function (error) {\n                return \"`\" + error.field + \"` \" + error.code;\n              }).join(\", \");\n            } else {\n              message += \" - \" + response.errors.toString();\n            }\n          }\n        } else {\n          message = response;\n        }\n        if (!message && res.statusCode === 403) {\n          message = \"Forbidden\";\n        }\n        fn(new Error(message));\n      } else {\n        fn(null, JSON.parse(response));\n      }\n    });\n  });\n  req.on(\"error\", fn);\n  if (data) {\n    req.write(data);\n  }\n  req.end();\n};\nmodule.exports = BaseClient;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}