{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { RestServiceService } from '../services/rest-service.service';\nimport { TabellaComponent } from '../tabella/tabella.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rest-service.service\";\nimport * as i2 from \"../tabella/tabella.component\";\nexport let ReadComponent = /*#__PURE__*/(() => {\n  class ReadComponent {\n    constructor(serviceRest) {\n      this.serviceRest = serviceRest;\n    }\n    ngOnInit() {\n      this.serviceRest.areaCondivisa.selectRead = true;\n    }\n    ngAfterViewInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(\"read in after view init\");\n        yield this.serviceRest.getDati().subscribe(e => {});\n      });\n    }\n    read() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(\"read....\");\n      });\n    }\n  }\n  ReadComponent.ɵfac = function ReadComponent_Factory(t) {\n    return new (t || ReadComponent)(i0.ɵɵdirectiveInject(i1.RestServiceService));\n  };\n  ReadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReadComponent,\n    selectors: [[\"app-read\"]],\n    viewQuery: function ReadComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TabellaComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabellaRef = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 0,\n    template: function ReadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-tabella\");\n      }\n    },\n    dependencies: [i2.TabellaComponent]\n  });\n  return ReadComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}