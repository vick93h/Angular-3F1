{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ElementRef } from '@angular/core';\nimport { RestServiceService } from '../services/rest-service.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rest-service.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"modale\"];\nexport let ModaleComponent = /*#__PURE__*/(() => {\n  class ModaleComponent {\n    constructor(serviceRest, modalService, route, elRef) {\n      this.serviceRest = serviceRest;\n      this.modalService = modalService;\n      this.route = route;\n      this.elRef = elRef;\n      this.id = this.serviceRest.areaCondivisa.id;\n    }\n    ngOnInit() {\n      this.serviceRest.getDatiById(this.id).subscribe(data => {\n        this.p = data;\n        console.log(this.p);\n      });\n    }\n    onExit(modal) {\n      return __awaiter(this, void 0, void 0, function* () {\n        modal.dismiss('Cross click');\n        this.modalService.dismissAll();\n        yield this.route.navigate(['Update']);\n      });\n    }\n    onFileSelected($event) {\n      const target = event.target;\n      if (target.files && target.files.length > 0) {\n        this.avatar = target.files[0].name;\n        this.avatar = './assets/image/' + this.avatar; //ricavo il nome dell' immagine e concateno la cartella asset per definire il path completo\n      }\n    }\n\n    onInsert(modal) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.route.navigate(['Home']);\n      });\n    }\n    ngAfterViewInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield new Promise(f => setTimeout(f, 1000));\n        this.nome = this.p.Nome;\n        this.cognome = this.p.Cognome;\n        this.mail = this.p.Email;\n        this.sesso = this.p.Sesso;\n        this.avatar = this.p.Avatar;\n        this.mestiere = this.p.Mestiere;\n      });\n    }\n  }\n  ModaleComponent.ɵfac = function ModaleComponent_Factory(t) {\n    return new (t || ModaleComponent)(i0.ɵɵdirectiveInject(i1.RestServiceService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  ModaleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModaleComponent,\n    selectors: [[\"app-modale\"]],\n    viewQuery: function ModaleComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modaleRef = _t.first);\n      }\n    },\n    decls: 16,\n    vars: 0,\n    consts: [[1, \"mb-3\"], [\"for\", \"email\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"name@flowbite.com\", \"required\", \"\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [1, \"mb-6\"], [\"for\", \"password\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [1, \"flex\", \"items-start\", \"mb-6\"], [1, \"flex\", \"items-center\", \"h-5\"], [\"id\", \"remember\", \"type\", \"checkbox\", \"value\", \"\", \"required\", \"\", 1, \"w-4\", \"h-4\", \"border\", \"border-gray-300\", \"rounded\", \"bg-gray-50\", \"focus:ring-3\", \"focus:ring-blue-300\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:focus:ring-blue-600\", \"dark:ring-offset-gray-800\", \"dark:focus:ring-offset-gray-800\"], [\"for\", \"remember\", 1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-gray-300\"], [\"type\", \"submit\", 1, \"text-white\", \"bg-blue-700\", \"hover:bg-blue-800\", \"focus:ring-4\", \"focus:outline-none\", \"focus:ring-blue-300\", \"font-medium\", \"rounded-lg\", \"text-sm\", \"w-full\", \"sm:w-auto\", \"px-5\", \"py-2.5\", \"text-center\", \"dark:bg-blue-600\", \"dark:hover:bg-blue-700\", \"dark:focus:ring-blue-800\"]],\n    template: function ModaleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Your email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Remember me\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"button\", 10);\n        i0.ɵɵtext(15, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm]\n  });\n  return ModaleComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}