{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { post } from \"../Model/post\";\nimport { RestServiceService } from \"../services/rest-service.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rest-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TabellaComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const variable_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(variable_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(variable_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(variable_r1.author);\n  }\n}\nexport let TabellaComponent = /*#__PURE__*/(() => {\n  class TabellaComponent {\n    constructor(rest) {\n      this.rest = rest;\n      this.premuto = false;\n    }\n    ngOnInit() {\n      this.getPost();\n    }\n    getPost() {\n      this.rest.getDati().subscribe(e => {\n        console.log(e);\n        this.posts = e;\n        /*var table = document.createElement(\"table\");\r\n        var tr = document.createElement('tr');\r\n        var td1 = document.createElement('td');\r\n        var td2 = document.createElement('td');\r\n        var nome = document.createTextNode('Title');\r\n        var cognome = document.createTextNode('Author');\r\n        td1.appendChild(nome);\r\n        td2.appendChild(cognome);\r\n        tr.appendChild(td1);\r\n        tr.appendChild(td2);\r\n        table.appendChild(tr);\r\n        for (var i = 0; i < this.posts.length; i++) {\r\n          var tr = document.createElement(\"tr\");\r\n                  var td1 = document.createElement(\"td\");\r\n          var td2 = document.createElement(\"td\");\r\n                  var text1 = document.createTextNode(this.posts[i].title);\r\n          var text2 = document.createTextNode(this.posts[i].author);\r\n                  td1.appendChild(text1);\r\n          td2.appendChild(text2);\r\n          tr.appendChild(td1);\r\n          tr.appendChild(td2);\r\n                  table.appendChild(tr);\r\n          table.setAttribute(\"border\", \"2\");\r\n          table.setAttribute(\"style\", \"background-color:aqua;\");\r\n          table.setAttribute(\"width\", \"200px\");\r\n          table.setAttribute(\"height\", \"200px\");\r\n          table.setAttribute(\"align\", \"center\");\r\n        }\r\n        document.body.appendChild(table);*/\n      });\n    }\n\n    post() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.premuto = !this.premuto;\n        var p = new post(this.title_ng, this.author_ng);\n        this.posts.push(p);\n        yield this.popolaTabella(this.title_ng, this.author_ng); //scrive nel JsonDB tramite http\n      });\n    }\n\n    popolaTabella(title, author) {\n      var p = new post(title, author);\n      this.rest.postDati(p).subscribe(() => {});\n    }\n  }\n  TabellaComponent.ɵfac = function TabellaComponent_Factory(t) {\n    return new (t || TabellaComponent)(i0.ɵɵdirectiveInject(i1.RestServiceService));\n  };\n  TabellaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TabellaComponent,\n    selectors: [[\"app-tabella\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[1, \"container\", 2, \"width\", \"fit-content\"], [2, \"text-align\", \"center\"], [\"id\", \"title\", \"type\", \"text\", \"placeholder\", \"Inserisci Title\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"author\", \"type\", \"text\", \"placeholder\", \"Inserisci Author\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"buttonForm\", 3, \"click\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"]],\n    template: function TabellaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function TabellaComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.title_ng = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TabellaComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.author_ng = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TabellaComponent_Template_button_click_4_listener() {\n          return ctx.post();\n        });\n        i0.ɵɵtext(5, \"Aggiungi Riga\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"table\", 5)(7, \"thead\")(8, \"tr\")(9, \"th\", 6);\n        i0.ɵɵtext(10, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 6);\n        i0.ɵɵtext(12, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 6);\n        i0.ɵɵtext(14, \"Author\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, TabellaComponent_tr_16_Template, 7, 3, \"tr\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.title_ng);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.author_ng);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"input[type=text][_ngcontent-%COMP%]{width:30%;padding:12px;border:1px solid #ccc;border-radius:4px;box-sizing:border-box;margin:6px 6px 16px;resize:vertical}.container[_ngcontent-%COMP%]{margin-bottom:6px;margin-top:30px;border-radius:5px;background-color:#f2f2f2;padding:20px}.buttonForm[_ngcontent-%COMP%]{background:#5E5DF0;border-radius:999px;box-shadow:#5e5df0 0 10px 20px -10px;box-sizing:border-box;color:#fff;cursor:pointer;font-family:Inter,Helvetica,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",NotoColorEmoji,\\\"Noto Color Emoji\\\",Segoe UI Symbol,\\\"Android Emoji\\\",EmojiSymbols,-apple-system,system-ui,Segoe UI,Roboto,Helvetica Neue,Noto Sans,sans-serif;font-size:16px;font-weight:700;line-height:24px;opacity:1;outline:0 solid transparent;padding:8px 18px;user-select:none;-webkit-user-select:none;touch-action:manipulation;width:-moz-fit-content;width:fit-content;word-break:break-word;border:0;margin-left:50px;margin-bottom:20px}\"]\n  });\n  return TabellaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}