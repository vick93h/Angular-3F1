{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { RestServiceService } from '../services/rest-service.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rest-service.service\";\nimport * as i2 from \"@angular/router\";\nexport let ReadComponent = /*#__PURE__*/(() => {\n  class ReadComponent {\n    constructor(serviceRest, route) {\n      this.serviceRest = serviceRest;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.serviceRest.areaCondivisa.selectRead = true;\n    }\n    ngAfterViewInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.serviceRest.getDati().subscribe(e => {});\n        yield new Promise(f => setTimeout(f, 3000));\n        yield this.route.navigate(['Home']);\n      });\n    }\n  }\n  ReadComponent.ɵfac = function ReadComponent_Factory(t) {\n    return new (t || ReadComponent)(i0.ɵɵdirectiveInject(i1.RestServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  ReadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReadComponent,\n    selectors: [[\"app-read\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"Content\"], [1, \"body\"], [\"id\", \"cookiesPopup\", 1, \"cookiesContent\"], [\"src\", \"./assets/icon/read.png\", \"alt\", \"read-img\"]],\n    template: function ReadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"Sto Leggendo i dati dal database....\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    styles: [\".body[_ngcontent-%COMP%]{font-family:Roboto,sans-serif;padding:0;margin:0;background-color:#8b0000;background-repeat:no-repeat;background-attachment:fixed;background-size:100% 100%;display:flex;justify-content:center;align-items:center;height:100vh;text-align:center}.cookiesContent[_ngcontent-%COMP%]{width:320px;display:flex;flex-direction:column;align-items:center;background-color:#fff;color:#000;text-align:center;border-radius:20px;padding:30px 30px 70px}button.close[_ngcontent-%COMP%]{width:30px;font-size:20px;color:#c0c5cb;align-self:flex-end;background-color:transparent;border:none;margin-bottom:10px}img[_ngcontent-%COMP%]{width:82px;margin-bottom:15px}p[_ngcontent-%COMP%]{margin-bottom:40px;font-size:18px}button.accept[_ngcontent-%COMP%]{background-color:#ed6755;border:none;border-radius:5px;width:200px;padding:14px;font-size:16px;color:#fff;box-shadow:0 6px 18px -5px #ed6755}div.Content[_ngcontent-%COMP%]{text-align:center;margin:0 auto}\"]\n  });\n  return ReadComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}